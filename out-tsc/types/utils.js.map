{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/types/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { GameStore } from '../components/binering/store';\nimport { Game } from './binering/Game';\n\nexport interface CardInfo {\n  playerId?: number;\n  deckId?: string;\n  value?: boolean;\n  dataIsValid: boolean;\n}\nexport function parseCardInfo(input: string): CardInfo {\n  const data: string[] = input.toString().split('||');\n  var result: CardInfo = {\n    dataIsValid: false,\n  };\n  if (data.length < 3) {\n    const result: CardInfo = {\n      dataIsValid: false,\n    };\n  } else {\n    result.playerId = Number(data[0]);\n    result.value = data[1].toLowerCase() == 'one' ? true : false;\n    result.deckId = data[2];\n    result.dataIsValid = true;\n  }\n  return result;\n}\n\nexport function messageBox(val: string) {\n  document.dispatchEvent(new CustomEvent('msg-event', { detail: val }));\n}\n\nexport async function find_location_old(game: Game) {\n  var bdcApi: string =\n    'https://api.bigdatacloud.net/data/reverse-geocode-client';\n\n  var google: string = 'http://maps.google.com/maps?z=20&q=';\n  //http://maps.google.com/maps?q=24.197611,120.780512\n  //24.197611,120.780512\n  var lat = '';\n  var long = '';\n  if (game.players[1].isLatitute) {\n    lat = game.players[1].get_location();\n    long = game.players[2].get_location();\n  } else {\n    lat = game.players[2].get_location();\n    long = game.players[1].get_location();\n  }\n  //debugger;\n  var bdcApi: string = bdcApi + '?latitude=' + lat + '&longitude=' + long;\n  +'&localityLanguage=en';\n  //console.log('api:' + bdcApi);\n  // var location = await getApi(bdcApi);\n  //get_wiki_location(lat, long);\n  google = google + lat + ',' + long;\n\n  GameStore.update(val => {\n    //val.location = location;\n    val.locationUrl = google;\n    val.coordination = lat + ',' + long;\n    return val;\n  });\n}\n\nasync function getApi(url: string) {\n  let response = await fetch(url);\n  const result = await response.json();\n  //console.log(result);\n  var loc = '';\n  var output = [];\n  if (result['continent']) output.push(result['continent']);\n\n  if (result['countryName']) loc += output.push(result['countryName']);\n\n  if (result['locality']) loc += output.push(result['locality']);\n\n  loc = output.join(', ');\n  return loc;\n}\n\nfunction get_wiki_location(lat: string, long: string) {\n  var url =\n    'https://en.wikipedia.org/w/api.php?action=query&format=json&list=geosearch&gsradius=1000&gscoord=';\n  url += lat.trim() + '|' + long.trim() + '&origin=*';\n  console.log(url);\n  fetch(url, {\n    method: 'GET',\n    mode: 'cors',\n    headers: {},\n  })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n}\n"]}